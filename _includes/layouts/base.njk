<!DOCTYPE html>
<html lang="en" 
      x-data="{ 
        darkMode: localStorage.getItem('darkMode') === 'true', 
        menuOpen: false, 
        activePage: null,
        iframeLoading: true
      }"
      x-init="$watch('darkMode', val => localStorage.setItem('darkMode', val))"
      :class="{ 'dark': darkMode }">
<head>
    <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ settings.logoText }} | Showcase</title>
    <link rel="preconnect" href="https://fonts.googleapis.com"> <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin> <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
    <style>[x-cloak] { display: none !important; }</style>
</head>
<body class="bg-gray-200 dark:bg-gray-900 text-gray-800 dark:text-gray-200 transition-colors duration-300 font-sans" x-data="sidebar()">

    <!-- ===== Navigation Overlay ===== -->
    <div x-show="menuOpen" x-cloak class="fixed inset-0 bg-gray-200 dark:bg-gray-800 z-50 p-6 flex flex-col" x-transition:enter="transition ease-out duration-300" x-transition:enter-start="opacity-0 transform -translate-x-full" x-transition:enter-end="opacity-100 transform translate-x-0" x-transition:leave="transition ease-in duration-300" x-transition:leave-start="opacity-100 transform translate-x-0" x-transition:leave-end="opacity-0 transform -translate-x-full">
        <div class="flex justify-between items-center mb-4">
          <img src="{{ settings.logoImage }}" alt="{{ settings.logoText }} Logo" class="h-10 w-auto">
          <button @click="menuOpen = false" class="text-gray-600 dark:text-gray-400 hover:text-blue-500 dark:hover:text-blue-400">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" /></svg>
          </button>
        </div>
        <div class="relative mt-4">
            <input type="text" x-model.debounce.300ms="searchQuery" placeholder="Search pages..." class="w-full px-4 py-3 rounded-lg bg-gray-200 dark:bg-gray-900 border-none focus:ring-2 focus:ring-blue-500 text-gray-800 dark:text-gray-200 shadow-[inset_5px_5px_10px_#d0d0d0,inset_-5px_-5px_10px_#ffffff] dark:shadow-[inset_5px_5px_10px_#1c1c1c,inset_-5px_-5px_10px_#2a2a2a]">
        </div>
        <nav class="mt-4 flex-grow overflow-y-auto pr-2">
            <ul class="space-y-2">
                <template x-for="page in filteredPages" :key="page.embedUrl">
                    <li>
                        <a :href="page.embedUrl" @click.prevent="activePage = page; iframeLoading = true; menuOpen = false" class="block w-full text-left px-4 py-3 rounded-lg text-gray-700 dark:text-gray-300 transition-all duration-200 font-medium hover:bg-gray-300 dark:hover:bg-gray-700" :class="{ 'font-semibold text-blue-600 dark:text-blue-400 bg-gray-300 dark:bg-gray-700': activePage && activePage.embedUrl === page.embedUrl }">
                            <span x-text="page.title"></span>
                        </a>
                    </li>
                </template>
                <li x-show="filteredPages.length === 0" class="px-4 py-3 text-gray-500">No pages found.</li>
            </ul>
        </nav>
        <div class="mt-6 pt-6 border-t border-gray-300 dark:border-gray-700">
             <button @click="darkMode = !darkMode" class="w-full flex items-center justify-center gap-x-2 px-4 py-3 rounded-lg font-semibold bg-gray-300 dark:bg-gray-700 hover:bg-gray-400 dark:hover:bg-gray-600 transition-colors duration-150">
                <span x-show="!darkMode">üåô</span><span x-show="darkMode">‚òÄÔ∏è</span>
                <span x-text="darkMode ? 'Light Mode' : 'Dark Mode'"></span>
            </button>
        </div>
    </div>

    <!-- ===== Main Content Area (TRUE FULL SCREEN) ===== -->
    <main class="w-screen h-screen">
        <div class="w-full h-full flex items-center justify-center text-center p-4 bg-gray-200 dark:bg-gray-900" x-show="!activePage" x-cloak>
            <h2 class="text-3xl md:text-4xl font-bold text-gray-700 dark:text-gray-300">
                Welcome to SaasDeep Demos.<br class="block md:hidden"> Click the menu to begin.
            </h2>
        </div>

        <!-- IFRAME AND LOADER CONTAINER -->
        <div class="w-full h-full relative bg-black" x-show="activePage" x-cloak>
            <!-- Loading Spinner -->
            <div x-show="iframeLoading" class="absolute inset-0 flex items-center justify-center bg-gray-900 bg-opacity-50">
                <svg class="animate-spin h-10 w-10 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
            </div>
            <!-- The Iframe (edge-to-edge) -->
            <iframe @load="iframeLoading = false" :src="activePage ? activePage.embedUrl : ''" class="w-full h-full border-none" frameborder="0"></iframe>
        </div>
    </main>

    <!-- ===== Open Menu Button ===== -->
    <div class="fixed top-5 left-5 z-40">
        <button x-show="!menuOpen" @click="menuOpen = true" x-cloak class="block p-4 bg-white/70 dark:bg-black/50 backdrop-blur-sm font-bold rounded-lg shadow-lg dark:shadow-black/50 transition-transform hover:scale-110 active:scale-95">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-800 dark:text-gray-200" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" /></svg>
        </button>
    </div>

    <!-- Data Logic -->
    <script>
        document.addEventListener('alpine:init', () => {
            Alpine.data('sidebar', () => ({
                searchQuery: '', pages: {{ collections.pages | reverse | json | safe }},
                get filteredPages() {
                    if (this.search-query.trim() === '') return this.pages;
                    return this.pages.filter(page => page.title.toLowerCase().includes(this.searchQuery.toLowerCase()));
                }
            }));
        });
    </script>
</body>
</html>
